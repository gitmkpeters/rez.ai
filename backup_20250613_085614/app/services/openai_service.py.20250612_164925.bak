import os
import logging
from openai import OpenAI

class OpenAIService:
    def __init__(self):
        self.client = OpenAI(api_key=os.getenv('OPENAI_API_KEY'))
        self.logger = logging.getLogger(__name__)
    
    def generate_tailored_summary(self, work_experience, job_description, user_skills=None):
        """Generate a highly tailored professional summary optimized for ATS and job matching"""
        try:
            # Extract key information for better targeting
            skills_text = f"\n\nKey Skills: {user_skills}" if user_skills else ""
            
            prompt = f"""
            You are an expert ATS optimization specialist and resume writer. Create a powerful, tailored professional summary that will achieve the HIGHEST possible match score with the job description.

            JOB DESCRIPTION TO MATCH:
            {job_description}

            USER'S WORK EXPERIENCE:
            {work_experience}{skills_text}

            Create a professional summary (3-4 sentences, 80-120 words) that:

            1. **KEYWORD OPTIMIZATION**: Include the EXACT keywords and phrases from the job description
            2. **QUANTIFIED ACHIEVEMENTS**: Use specific numbers, percentages, or metrics from the user's experience
            3. **ROLE ALIGNMENT**: Mirror the job title and key responsibilities mentioned in the posting
            4. **INDUSTRY LANGUAGE**: Use the same terminology and buzzwords as the job description
            5. **VALUE PROPOSITION**: Clearly state how the candidate solves the employer's specific needs
            6. **ATS FRIENDLY**: Use standard formatting and avoid special characters

            REQUIREMENTS:
            - Start with the candidate's years of experience and primary expertise area
            - Include 3-5 key skills/technologies mentioned in the job posting
            - Mention 1-2 quantified achievements that align with job requirements
            - End with a forward-looking statement about contributing to the company's goals
            - Use action verbs that match the job description's language
            - Ensure every word adds value for ATS scanning

            Return ONLY the professional summary text, no additional formatting or explanations.
            """
            
            response = self.client.chat.completions.create(
                model="gpt-4",  # Using GPT-4 for better quality
                messages=[
                    {"role": "system", "content": "You are an expert ATS optimization specialist who creates professional summaries that achieve maximum job match scores."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=300,
                temperature=0.3  # Lower temperature for more focused, consistent output
            )
            
            summary = response.choices[0].message.content.strip()
            
            # Log for debugging
            self.logger.info(f"Generated tailored summary: {len(summary)} characters")
            
            return summary
            
        except Exception as e:
            self.logger.error(f"Error generating tailored summary: {str(e)}")
            raise ValueError(f"Error generating tailored summary: {str(e)}")
    
    def extract_key_requirements(self, job_description):
        """Extract key requirements and keywords from job description for ATS optimization"""
        try:
            prompt = f"""
            You are an expert ATS and job requirement analyst. Extract the most important keywords, skills, 
            qualifications, and requirements from this job description that would be used by ATS systems.

            JOB DESCRIPTION:
            {job_description}

            Extract and organize the following:
            1. Required technical skills and technologies
            2. Required soft skills and qualities
            3. Required experience (years, domains, industries)
            4. Required education and certifications
            5. Key responsibilities and duties
            6. Industry-specific terminology and buzzwords
            7. Company values and culture keywords

            Format your response as a structured JSON with these categories. Include ONLY the most important 
            and frequently mentioned terms that would be critical for ATS matching.
            """
            
            response = self.client.chat.completions.create(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": "You are an expert ATS analyst who extracts key requirements from job descriptions."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=1000,
                temperature=0.3
            )
            
            return response.choices[0].message.content.strip()
            
        except Exception as e:
            self.logger.error(f"Error extracting key requirements: {str(e)}")
            return "{}"  # Return empty JSON on error
    
    def tailor_resume(self, resume_text, job_description):
        """Tailor existing resume content based on job description"""
        try:
            # First extract key requirements for better targeting
            key_requirements = self.extract_key_requirements(job_description)
            
            prompt = f"""
            You are a professional resume writer specializing in ATS optimization. Your task is to rewrite 
            the provided resume to achieve the MAXIMUM POSSIBLE KEYWORD MATCH with the job description.

            JOB DESCRIPTION:
            {job_description}

            KEY REQUIREMENTS (extracted for your reference):
            {key_requirements}

            ORIGINAL RESUME:
            {resume_text}

            INSTRUCTIONS FOR REWRITING:
            1. KEYWORD OPTIMIZATION: Include as many exact keywords and phrases from the job description as possible
            2. MATCH TERMINOLOGY: Use identical terminology for skills, tools, and responsibilities
            3. SECTION PRIORITIZATION: Organize sections to highlight the most relevant experience first
            4. QUANTIFY ACHIEVEMENTS: Include metrics and numbers that demonstrate impact
            5. MAINTAIN TRUTH: Do not fabricate experience, but emphasize relevant aspects of existing experience
            6. FORMAT CONSISTENCY: Use clean, ATS-friendly formatting
            7. SKILL ALIGNMENT: Ensure skills section contains keywords from the job description
            8. LENGTH OPTIMIZATION: Create a comprehensive resume (500-700 words) with high keyword density

            Your goal is to achieve AT LEAST 80% keyword match with the job description.
            Return only the tailored resume content, properly formatted for a professional document.
            """
            
            response = self.client.chat.completions.create(
                model="gpt-4",  # Upgraded to GPT-4 for better optimization
                messages=[
                    {"role": "system", "content": "You are an expert ATS optimization specialist who rewrites resumes to achieve maximum job match scores."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=3000,
                temperature=0.3  # Lower temperature for more focused output
            )
            
            return response.choices[0].message.content.strip()
            
        except Exception as e:
            self.logger.error(f"Error tailoring resume with OpenAI: {str(e)}")
            raise ValueError(f"Error processing resume with AI: {str(e)}")

    def generate_resume(self, user_info, job_description, tailored_summary=None):
        """Generate a new resume from scratch based on user info and job description"""
        try:
            # Extract key requirements for better targeting
            key_requirements = self.extract_key_requirements(job_description)
            
            # Include the tailored summary if provided
            summary_instruction = ""
            if tailored_summary:
                summary_instruction = f"""
                
                IMPORTANT: Use this EXACT professional summary in the resume:
                "{tailored_summary}"
                
                Place this summary immediately after the contact information and before other sections.
                """
            
            prompt = f"""
            You are an expert ATS optimization specialist and resume writer. Create a highly optimized resume 
            that will achieve the MAXIMUM POSSIBLE KEYWORD MATCH with the job description.

            JOB DESCRIPTION:
            {job_description}

            KEY REQUIREMENTS (extracted for your reference):
            {key_requirements}

            USER INFORMATION:
            {user_info}{summary_instruction}

            INSTRUCTIONS FOR RESUME CREATION:
            1. KEYWORD SATURATION: Include as many exact keywords and phrases from the job description as possible
            2. TERMINOLOGY MATCHING: Use identical terminology for skills, tools, and responsibilities
            3. COMPREHENSIVE CONTENT: Create a detailed resume (500-700 words) with high keyword density
            4. QUANTIFY ACHIEVEMENTS: Include metrics and numbers that demonstrate impact
            5. MAINTAIN TRUTH: Use only information provided in the user information
            6. FORMAT OPTIMIZATION: Use clean, ATS-friendly formatting with clear section headings
            7. SKILL HIGHLIGHTING: Create a detailed skills section with keywords from the job description
            8. EXPERIENCE ALIGNMENT: Frame experience to directly address job requirements

            STRUCTURE:
            1. Name and Contact Information
            2. Professional Summary (use the provided one if given)
            3. Skills (comprehensive list matching job keywords)
            4. Work Experience (detailed and keyword-rich)
            5. Education
            6. Additional sections as appropriate (certifications, projects, etc.)

            Your goal is to achieve AT LEAST 80% keyword match with the job description.
            Return a complete, well-formatted resume ready for submission.
            """
            
            response = self.client.chat.completions.create(
                model="gpt-4",  # Upgraded to GPT-4 for better optimization
                messages=[
                    {"role": "system", "content": "You are an expert ATS optimization specialist who creates resumes that achieve maximum job match scores."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=3000,
                temperature=0.3  # Lower temperature for more focused output
            )
            
            return response.choices[0].message.content.strip()
            
        except Exception as e:
            self.logger.error(f"Error generating resume with OpenAI: {str(e)}")
            raise ValueError(f"Error generating resume with AI: {str(e)}")

    def generate_cover_letter(self, user_info, job_description, company_name=None):
        """Generate a cover letter based on user info and job description"""
        try:
            company_text = f" at {company_name}" if company_name else ""
            
            # Extract key requirements for better targeting
            key_requirements = self.extract_key_requirements(job_description)
            
            prompt = f"""
            You are an expert cover letter writer specializing in ATS optimization. Create a compelling, 
            keyword-rich cover letter that will achieve a high match score with the job description.

            JOB DESCRIPTION:
            {job_description}

            KEY REQUIREMENTS (extracted for your reference):
            {key_requirements}

            USER INFORMATION:
            {user_info}

            INSTRUCTIONS FOR COVER LETTER:
            1. KEYWORD INTEGRATION: Naturally incorporate key terms from the job description
            2. OPENING IMPACT: Start with a strong, engaging introduction showing enthusiasm for the role{company_text}
            3. QUALIFICATION ALIGNMENT: Highlight 3-4 specific qualifications that directly match job requirements
            4. ACHIEVEMENT FOCUS: Include 1-2 quantified achievements relevant to the role
            5. COMPANY CONNECTION: Show understanding of company values and how you align with them
            6. CALL TO ACTION: End with a professional call to action
            7. LENGTH OPTIMIZATION: Keep to 300-400 words (3-4 paragraphs)

            Return a complete, professional cover letter ready for submission.
            """
            
            response = self.client.chat.completions.create(
                model="gpt-4",  # Upgraded to GPT-4 for better quality
                messages=[
                    {"role": "system", "content": "You are an expert cover letter writer who creates compelling, ATS-optimized cover letters."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=1500,
                temperature=0.4
            )
            
            return response.choices[0].message.content.strip()
            
        except Exception as e:
            self.logger.error(f"Error generating cover letter with OpenAI: {str(e)}")
            raise ValueError(f"Error generating cover letter with AI: {str(e)}")

    def analyze_resume_fit(self, resume_text, job_description):
        """Analyze how well a resume fits a job and provide improvement suggestions"""
        try:
            prompt = f"""
            You are a hiring manager and ATS expert. Analyze how well this resume matches the job description 
            and provide specific improvement suggestions to increase the match rate.

            RESUME:
            {resume_text}

            JOB DESCRIPTION:
            {job_description}

            Please provide:
            1. Overall fit score (1-10)
            2. Estimated keyword match percentage
            3. Top 5 strengths that match the job
            4. Top 5 areas for improvement
            5. Specific keywords/skills missing from the resume
            6. Suggestions for better positioning of existing experience
            7. Recommendations for resume sections to expand or add

            Format your response as a structured analysis with clear headings and bullet points.
            """
            
            response = self.client.chat.completions.create(
                model="gpt-4",  # Upgraded to GPT-4 for better analysis
                messages=[
                    {"role": "system", "content": "You are an expert ATS analyst who provides detailed resume feedback."},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=1500,
                temperature=0.3
            )
            
            return response.choices[0].message.content.strip()
            
        except Exception as e:
            self.logger.error(f"Error analyzing resume fit with OpenAI: {str(e)}")
            raise ValueError(f"Error analyzing resume with AI: {str(e)}")
